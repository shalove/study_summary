<?php 

一、TP商城分为前后台
后台主要负责数据库数据的管理，用于增删改查数据
前台主要从数据库中查询数据展示到前台页面

二、后台模块划分
	管理员模块
	角色权限模块
	商品管理模块
	订单管理模块

2.1 登陆模块
	首先是登陆部分，登陆界面需要用到验证码，验证码的生成是TP中自带的Verify类来生成的；
	提交验证可以使用ajax登陆验证，首先先验证 验证码，其次根据输入的用户名查询数据库，查找到对应的用户的话再去判断密码的正确性；
	登陆成功后跳转到后台首页；

2.2 管理员模块
	管理员分为 超级管理员、普通管理员；超管拥有一切权限，普通管理员需要根据对应的角色才能拥有相应的权限；
	管理员的列表显示就是从管理员表中查询出所有的数据，分配到模板再进行遍历输出显示；
	管理员的添加操作就是根据表单提交的数据，调用模型方法add进行插入
	管理员编辑需要先根据要编辑的管理员的id查出相应的管理员信息，显示到编辑页面的默认显示中
	删除操作 注意一点就是对于重要信息的删除需要给提示，不能直接就删除数据库中的信息
	查询操作 就是根据表单输入的查询选项，查询数据库中的相应信息，可能会用到模糊查询（like）等，查询这里也可以实用ajax无跳转刷新，可以提高体验

2.3 角色权限模块
	角色权限的管理使用的是RBAC模式（role-based access control 基于角色的访问控制），用户只需要去寻找自己对应的角色就可以知道自己拥有的权限；用户通过角色id去找到角色表中自己对应的角色，再通过角色表中的权限ids（权限集合）去查找所拥有的权限；
		这里由于权限的不同就涉及到权限访问限制的问题；超管可以访问所有模块，而普通管理员只能访问到自己权限对应的模块。

		如何限制越权访问？
			让所有的控制器继承一个CommonController控制器，该控制的构造方法中会调用一个判断方法，在用户访问模块的时候都会去判断用户是够有权限访问当前访问模块（也就是相应的控制器和方法），这就限制了用户的越权访问；但是超管和登陆首页及退出不应该进行限制，所以得在方法中做出例外设定

2.4 商品管理模块
	商品管理主要就是商品的增删改查
	其中商品的添加、修改涉及到一些重要点（文件上传、富文本编辑器（ueditor）的使用、相册上传）
	文件上传主要使用的是TP中的文件上传类（Upload.class），uploadOne（）是单文件上传方法、upload（）是多文件上传方法，要注意文件上传 需要表单设置 enctype = multipart/form-data 属性，还有多文件上传 上传input的name属性需要设置成集合形式，加一个中括号 []

	商品修改同样的也是要将要修改的商品信息查出来，显示到默认值当中。还有修改logo图片时要记得将原图片删除，
	相册的删除使用的是ajax异步删除。

	商品类型属性
		每种商品都有其所属的类型，不同的类型对应有不同的属性，每种属性又有不同的属性值，这里属性分为几种，
		一是单选属性，在前台显示来看就是有多个可选属性，但是只能选择属性中的一种；二是唯一属性，唯一属性一般是描述商品唯一特性，比如产地，是唯一不可选的，还有就是复选属性，也就是可以选择多个
		这里删除的时候需要注意一点，就是删除一种类型的时候，同时应该将对应类型下的属性都删除掉

2.5  订单管理模块
		订单的显示需要用到连表查询，将查询数据显示到列表，可以提供不同的查询方式，比如按订单号查询、按下单时间查询，对于查询也可以使用ajax无跳转局部刷新，通过发送ajax到数据库中连表查询出相应的数据（一般显示商品的详细信息），并显示都原来的列表页面
		关于添加这块，我觉得订单应该都是由客户提交的，不应该后台自己添加，但是可以做修改，比如需要调整订单中的商品的价格（可能有时需要给客户打折什么的）

三、 前台

	3.1 前台用户注册登录
		前台页面，用户可以不先登录也是可以访问相应商品的，但是如果不登陆就没法最终提交订单结算；所以首先有个注册登录模块；
		注册采用两种方式---邮箱注册和手机注册；这两种注册方式都可用ajax验证注册（最好使用，提高用户体验），其中邮箱注册可以用到第三方邮箱验证接口的使用，手机注册使用短信接口以及验证码；
		注册完成后就可以跳转到登陆页面，登陆页面也可以使用第三方登陆接口（QQ、微信、微博），同样的登陆界面也应该使用ajax登录验证

	3.2 前台首页
		前台首页的展示，首先是商品分类的展示，这个需要去数据库中查询到所有商品的分类信息，并根据商品分类的pid进行不同的划分，显示到不同的分类里（顶级分类、一级分类、二级分类。。无限极分类）
		热门活动商品展示：
			在数据库中查找出想要展示的分类的商品的所有信息，展示到前台页面（根据分类id查询）。

	3.3 商品详情
		在每个商品上添加链接，跳转到商品详情页，跳转的时候需要传递商品的id，以便在商品详情页能够根据传递的id查询出对应商品的信息进行详情展示；在详情页除了商品的基本信息外还需要展示商品属性、相册、介绍等。

	3.4 加入购物车
		点击加入购物车，这里分为两种情况，一种是登陆情况下，直接获取提交的商品数据插入到数据库中的购物车数据表中；一种是未登录情况，未登录情况下将数据先存储到cookie中，在数据库中根据商品的id查出商品的基本信息显示到成功添加的购物车模板显示；

	3.5	购物车列表显示
		购物车列表的显示同样分为两种情况：
		已登录情况： 从数据库中查出相应的购物车列表数据，显示到购物车列表模板，
		未登录情况：从cookie中取出数据，同样显示到模板；
		对于购物车列表的商品数量、总价、商品删除、全选框、导航栏购物车商品总数的修改基本都是使用ajax发送请求到数据库进行相应的修改；
		商品数量的修改：分为增减、数量直接修改；给按钮绑定点击事件（click），每次点击发送ajax请求修改数据库或cookie中的商品数量，因为每次都要发送ajax，所以可以将ajax发送请求的这部分封装成一个函数，点击事件进行调用就可以；
			商品数量的修改需要知道 商品的id，属性和修改后的数量，将修改后的数据传递到控制器，控制器调用模型中封装的方法修改数据库或cookie中的商品数量即可，修改完之后再将页面显示的数量（总数量、总价、导航栏购物车数量显示）
			删除也是同样的发送ajax，修改数据库或cookie中的数据，再将页面显示数据进行修改
	
	3.6 结算页面
		在购物车列表页面点击结算时会需要判断用户是否登录，如果是未登录需要先登录才能进行结算，在登陆后会把保存在cookie中的商品数保存到数据库中，同时删除cookie中的数据；
		结算页面的显示需要从购物车页面传递购物车表的ids（购物车表id的一个集合）	，用来查询要结算的商品数据（商品基本信息、商品属性、购买数量、计算总金额）显示到模板，根据session中保存的用户查询出用户收货地址，

	3.7 生成订单、完成支付
		订单的生成需要根据在用户在结算页面选择的信息（收货地址、物流方式、支付方式）生成，点击提交订单后根据表单提交的数据组装订单表字段需要的值，插入到数据库中。插入成功后，同时将数据保存到订单商品表中。
		然后组装第三方支付接口（支付宝）所需数据，发送请求，进行支付，支付成功第三方返回数据，根据返回数据组装完成支付页面的显示，同时修改数据库中支付状态。


关于模板中的输出问题
	如果是在tp的标签中输出，不需要加 {}，如果在TP中标签的name属性，也不需要$，其他在普通模板标签中
	输出，要加大括号和$符

	<volist name = 'data' id='val'>
	<if condition='$data['name'] > daa'>haha</if>

	<input type= 'text' value = "{$val['id']}">